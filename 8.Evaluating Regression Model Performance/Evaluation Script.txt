----------
Python
----------
# Evaluating the Model Performance (Preferred)
## Universal for all regression models
## Most convincing when used on test sets
## Applicable to both training and test sets
from sklearn.metrics import r2_score
r2 = r2_score(y_test, y_pred)
print(r2)
r2_adjusted = 1 - (1 - r2) * (len(y_test) - 1) / (len(y_test) - num_of_ind_vars - 1)
print(r2_adjusted)

# Evaluating the Model Performance (Alternative)
## Unique to models built from statsmodels
## Applicable to training sets only
print(regressor.rsquared)
print(regressor.rsquared_adj)

----------
R
----------
# Evaluating the Model Performance (Preferred)
## Universal for all regression models
## Most convincing when used on test sets
## Applicable to both training and test sets
ssr = sum((test_set$Y - y_pred) ^ 2)
sst = sum((test_set$Y - mean(test_set$Y)) ^ 2)
r2 = 1 - (ssr/sst)
print(r2)
r2_adjusted = 1 - (1 - r2) * (length(test_set$Y) - 1) / (length(test_set$Y) - num_of_ind_vars - 1)
print(r2_adjusted)

# Evaluating the Model Performance (Alternative)
## Unique to models built from lm
## Applicable to training sets only
print(summary(regressor)$r.squared)
print(summary(regressor)$adj.r.squared)