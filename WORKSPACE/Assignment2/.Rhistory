setwd("~/OneDrive - Texas Christian University/All 4-year Semesters/Spring 2025/Data Mining and Visualization/WORKSPACE/Assignment2")
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$SellPrice, SplitRatio = 0.75)
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$SellPrice, SplitRatio = 0.75)
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$SellPrice, SplitRatio = 0.75)
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$SellPrice, SplitRatio = 0.75)
clear
clean
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$`Sell Price`, SplitRatio = 0.75)
str(dataset)
summary(dataset)
head(dataset)
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Sell.Price, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Sell.Price ~ List.Price, data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'blue')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$List.Price, y = test_set$Sell.Price),
colour = 'green') +
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Test set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$List.Price, y = test_set$Sell.Price),
colour = 'green') +
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Test set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$List.Price, y = test_set$Sell.Price),
colour = 'green') +
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Test set)') +
xlab('List Price') +
ylab('Sell Price')
rlang::last_trace()
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')+
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Sell.Price, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Sell.Price ~ List.Price, data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')+
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$List.Price, y = test_set$Sell.Price),
colour = 'green') +
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Test set)') +
xlab('List Price') +
ylab('Sell Price')
print(predict(regressor, newdata = data.frame('List Price' = 20)))
# slope and intercept
print(regressor$coefficients)
str(dataset)
summary(dataset)
head(dataset)
dataset = read.csv('Dealership_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Sell.Price, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Sell.Price ~ List.Price, data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$List.Price, y = training_set$Sell.Price),
colour = 'red')+
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Training set)') +
xlab('List Price') +
ylab('Sell Price')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$List.Price, y = test_set$Sell.Price),
colour = 'green') +
geom_line(aes(x = training_set$List.Price, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sell Price vs List Price (Test set)') +
xlab('List Price') +
ylab('Sell Price')
print(predict(regressor, newdata = data.frame('List Price' = 20)))
# slope and intercept
print(regressor$coefficients)
