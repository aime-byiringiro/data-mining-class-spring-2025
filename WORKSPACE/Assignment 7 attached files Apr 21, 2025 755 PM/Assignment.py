# SVM# Importing the librariesimport numpy as npimport matplotlib.pyplot as pltimport pandas as pd# Importing the datasetdataset = pd.read_csv('Iris_Data.csv')X = dataset.iloc[:, :-1].to_numpy()y = dataset.iloc[:, -1].to_numpy()mapping = {'Iris-setosa': 0, 'Iris-versicolor': 1, 'Iris-virginica': 2}y = np.array([mapping[val] for val in y])#Iris-setosa; Iris-versicolor; Iris-virginica#no need to split the dataset into a training set and a test set. # Feature Scalingfrom sklearn.preprocessing import StandardScalersc = StandardScaler()X = sc.fit_transform(X)# Using Linearfrom sklearn.svm import SVCclassifier_linear = SVC(kernel = 'linear')classifier_linear.fit(X, y)print("SVC accuracy:", classifier_linear.score(X, y))#Using polyfrom sklearn.svm import SVCclassifier_poly = SVC(kernel='poly', degree=3, C=1.0)classifier_poly.fit(X, y)print("Poly accuracy:", classifier_poly.score(X,y))#Using Sigmoid from sklearn.linear_model import LogisticRegressionclassifier_sigmoid = LogisticRegression()classifier_sigmoid.fit(X, y)print("Sigmoid accuracy:", classifier_sigmoid.score(X, y))#Using rbffrom sklearn.svm import SVCclassifier_rbf = SVC(kernel='rbf')classifier_rbf.fit(X, y)print("rbf accuracy:", classifier_rbf.score(X,y))