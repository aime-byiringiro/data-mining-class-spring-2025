setwd("~/OneDrive - Texas Christian University/All 4-year Semesters/Spring 2025/Data Mining and Visualization/3.Multiple Linear Regression")
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
#Building the optimal model using Backward Elimination
#bakward elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor_opt)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
#Building the optimal model using Backward Elimination
#backward elimination
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
#              data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend
data = training_set)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
#Building the optimal model using Backward Elimination
#backward elimination
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
#              data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend +
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend +
data = training_set)
#backward elimination
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
# data = training_set)
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend +
#data = training_set)
summary(regressor_opt)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
#Building the optimal model using Backward Elimination
#backward elimination
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
# data = training_set)
#regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend +
#data = training_set)
summary(regressor_opt)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor_opt)
clear
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor_opt = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor_opt)
